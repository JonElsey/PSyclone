# PSyclone autogenerated SIR Python

from dawn4py.serialization.utils import *
from dawn4py.serialization.AST import Interval, VerticalRegion, BuiltinType
from dawn4py.serialization import AST
import dawn4py

vertical_region_fns = []
stencil_name = "psyclone"

k_interval = make_interval(Interval.Start, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zice"),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tsn", [0, 0, 0]),
    "<=",
    make_binary_operator(
      make_field_access_expr("ztfreez", [0, 0, 0]),
      "+",
      make_literal_access_expr("0.1e0", BuiltinType.Float)
      )

    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("zice"),
    make_literal_access_expr("1.e0", BuiltinType.Float),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("zice"),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_max"),
    make_binary_operator(
      make_field_access_expr("rnfmsk", [0, 0, 0]),
      "*",
      make_field_access_expr("rnfmsk_z", [0, 0, 0])
      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_max"),
    make_field_access_expr("upsmsk", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_max"),
    ">",
    make_field_access_expr("res_max")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_max"),
    make_field_access_expr("tmp_max"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_max"),
    make_field_access_expr("zice"),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_max"),
    ">",
    make_field_access_expr("res_max")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_max"),
    make_field_access_expr("tmp_max"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zind", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("res_max"),
      "*",
      make_field_access_expr("tmask", [0, 0, 0])
      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zind", [0, 0, 0]),
    make_binary_operator(
      make_literal_access_expr("1", BuiltinType.Integer),
      "-",
      make_field_access_expr("zind", [0, 0, 0])
      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.End, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.End, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwy", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 0, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("umask", [0, 0, 0]),
      "*",
      make_binary_operator(
        make_field_access_expr("mydomain", [1, 0, 0]),
        "-",
        make_field_access_expr("mydomain", [0, 0, 0])
        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zwy", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("vmask", [0, 0, 0]),
      "*",
      make_binary_operator(
        make_field_access_expr("mydomain", [0, 1, 0]),
        "-",
        make_field_access_expr("mydomain", [0, 0, 0])
        )

      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, -1), JRange=make_interval(Interval.Start, Interval.End, 0, -1)))

k_interval = make_interval(Interval.End, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zslpx", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.End, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zslpy", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 0, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("tmp_abs"),
    make_literal_access_expr("0.25e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_field_access_expr("tmp_abs"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_binary_operator(
      make_field_access_expr("tmp_abs"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_field_access_expr("res_abs"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign"),
    make_binary_operator(
      make_field_access_expr("zwx", [0, 0, 0]),
      "*",
      make_field_access_expr("zwx", [-1, 0, 0])
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zslpx", [0, 0, 0]),
    make_binary_operator(
      make_binary_operator(
        make_field_access_expr("zwx", [0, 0, 0]),
        "+",
        make_field_access_expr("zwx", [-1, 0, 0])
        ),
      "*",
      make_binary_operator(
        make_literal_access_expr("0.25e0", BuiltinType.Float),
        "+",
        make_field_access_expr("res_sign")
        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_1"),
    make_literal_access_expr("0.25e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_1"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_field_access_expr("tmp_abs_1"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign_1"),
    make_field_access_expr("res_abs_1"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign_1"),
    make_binary_operator(
      make_field_access_expr("zwy", [0, 0, 0]),
      "*",
      make_field_access_expr("zwy", [0, -1, 0])
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign_1"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign_1"),
    make_binary_operator(
      make_field_access_expr("res_sign_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zslpy", [0, 0, 0]),
    make_binary_operator(
      make_binary_operator(
        make_field_access_expr("zwy", [0, 0, 0]),
        "+",
        make_field_access_expr("zwy", [0, -1, 0])
        ),
      "*",
      make_binary_operator(
        make_literal_access_expr("0.25e0", BuiltinType.Float),
        "+",
        make_field_access_expr("res_sign_1")
        )

      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 1, 0), JRange=make_interval(Interval.Start, Interval.End, 1, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 0, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("tmp_abs"),
    make_literal_access_expr("1.e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_field_access_expr("tmp_abs"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_binary_operator(
      make_field_access_expr("tmp_abs"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_field_access_expr("res_abs"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign"),
    make_field_access_expr("zslpx", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_1"),
    make_field_access_expr("zslpx", [0, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_1"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_field_access_expr("tmp_abs_1"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_min"),
    make_field_access_expr("res_abs_1"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_2"),
    make_field_access_expr("zwx", [-1, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_2"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_2"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_2"),
    make_field_access_expr("tmp_abs_2"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_2"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_2"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("tmp_min"),
    make_binary_operator(
      make_literal_access_expr("2.e0", BuiltinType.Float),
      "*",
      make_field_access_expr("res_abs_2")
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_min"),
    "<",
    make_field_access_expr("res_min")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_min"),
    make_field_access_expr("tmp_min"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_3"),
    make_field_access_expr("zwx", [0, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_3"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_3"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_3"),
    make_field_access_expr("tmp_abs_3"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_3"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_3"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("tmp_min"),
    make_binary_operator(
      make_literal_access_expr("2.e0", BuiltinType.Float),
      "*",
      make_field_access_expr("res_abs_3")
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_min"),
    "<",
    make_field_access_expr("res_min")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_min"),
    make_field_access_expr("tmp_min"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zslpx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_field_access_expr("res_min")
      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_4"),
    make_literal_access_expr("1.e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_4"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_4"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_4"),
    make_field_access_expr("tmp_abs_4"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_4"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_4"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign_1"),
    make_field_access_expr("res_abs_4"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign_1"),
    make_field_access_expr("zslpy", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign_1"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign_1"),
    make_binary_operator(
      make_field_access_expr("res_sign_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_5"),
    make_field_access_expr("zslpy", [0, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_5"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_5"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_5"),
    make_field_access_expr("tmp_abs_5"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_5"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_5"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_min_1"),
    make_field_access_expr("res_abs_5"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_6"),
    make_field_access_expr("zwy", [0, -1, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_6"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_6"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_6"),
    make_field_access_expr("tmp_abs_6"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_6"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_6"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("tmp_min_1"),
    make_binary_operator(
      make_literal_access_expr("2.e0", BuiltinType.Float),
      "*",
      make_field_access_expr("res_abs_6")
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_min_1"),
    "<",
    make_field_access_expr("res_min_1")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_min_1"),
    make_field_access_expr("tmp_min_1"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_7"),
    make_field_access_expr("zwy", [0, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_7"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_7"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_7"),
    make_field_access_expr("tmp_abs_7"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_7"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_7"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("tmp_min_1"),
    make_binary_operator(
      make_literal_access_expr("2.e0", BuiltinType.Float),
      "*",
      make_field_access_expr("res_abs_7")
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_min_1"),
    "<",
    make_field_access_expr("res_min_1")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_min_1"),
    make_field_access_expr("tmp_min_1"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zslpy", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("res_sign_1"),
      "*",
      make_field_access_expr("res_min_1")
      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 1, 0), JRange=make_interval(Interval.Start, Interval.End, 1, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zdt"),
    make_literal_access_expr("1", BuiltinType.Integer),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward))

k_interval = make_interval(Interval.Start, Interval.End, 0, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("tmp_abs"),
    make_literal_access_expr("0.5e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_field_access_expr("tmp_abs"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_binary_operator(
      make_field_access_expr("tmp_abs"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_field_access_expr("res_abs"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign"),
    make_field_access_expr("pun", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("z0u"),
    make_field_access_expr("res_sign"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zalpha"),
    make_binary_operator(
      make_literal_access_expr("0.5e0", BuiltinType.Float),
      "-",
      make_field_access_expr("z0u")
      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zu"),
    make_binary_operator(
      make_field_access_expr("z0u"),
      "-",
      make_binary_operator(
        make_binary_operator(
          make_literal_access_expr("0.5e0", BuiltinType.Float),
          "*",
          make_field_access_expr("pun", [0, 0, 0])
          ),
        "*",
        make_field_access_expr("zdt")
        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zzwx"),
    make_binary_operator(
      make_field_access_expr("mydomain", [1, 0, 0]),
      "+",
      make_binary_operator(
        make_field_access_expr("zind", [0, 0, 0]),
        "*",
        make_binary_operator(
          make_field_access_expr("zu"),
          "*",
          make_field_access_expr("zslpx", [1, 0, 0])
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zzwy"),
    make_binary_operator(
      make_field_access_expr("mydomain", [0, 0, 0]),
      "+",
      make_binary_operator(
        make_field_access_expr("zind", [0, 0, 0]),
        "*",
        make_binary_operator(
          make_field_access_expr("zu"),
          "*",
          make_field_access_expr("zslpx", [0, 0, 0])
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("pun", [0, 0, 0]),
      "*",
      make_binary_operator(
        make_binary_operator(
          make_field_access_expr("zalpha"),
          "*",
          make_field_access_expr("zzwx")
          ),
        "+",
        make_binary_operator(
          make_binary_operator(
            make_literal_access_expr("1.", BuiltinType.Float),
            "-",
            make_field_access_expr("zalpha")
            ),
          "*",
          make_field_access_expr("zzwy")
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_1"),
    make_literal_access_expr("0.5e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_1"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_field_access_expr("tmp_abs_1"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign_1"),
    make_field_access_expr("res_abs_1"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign_1"),
    make_field_access_expr("pvn", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign_1"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign_1"),
    make_binary_operator(
      make_field_access_expr("res_sign_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("z0v"),
    make_field_access_expr("res_sign_1"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zalpha"),
    make_binary_operator(
      make_literal_access_expr("0.5e0", BuiltinType.Float),
      "-",
      make_field_access_expr("z0v")
      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zv"),
    make_binary_operator(
      make_field_access_expr("z0v"),
      "-",
      make_binary_operator(
        make_binary_operator(
          make_literal_access_expr("0.5e0", BuiltinType.Float),
          "*",
          make_field_access_expr("pvn", [0, 0, 0])
          ),
        "*",
        make_field_access_expr("zdt")
        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zzwx"),
    make_binary_operator(
      make_field_access_expr("mydomain", [0, 1, 0]),
      "+",
      make_binary_operator(
        make_field_access_expr("zind", [0, 0, 0]),
        "*",
        make_binary_operator(
          make_field_access_expr("zv"),
          "*",
          make_field_access_expr("zslpy", [0, 1, 0])
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zzwy"),
    make_binary_operator(
      make_field_access_expr("mydomain", [0, 0, 0]),
      "+",
      make_binary_operator(
        make_field_access_expr("zind", [0, 0, 0]),
        "*",
        make_binary_operator(
          make_field_access_expr("zv"),
          "*",
          make_field_access_expr("zslpy", [0, 0, 0])
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zwy", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("pvn", [0, 0, 0]),
      "*",
      make_binary_operator(
        make_binary_operator(
          make_field_access_expr("zalpha"),
          "*",
          make_field_access_expr("zzwx")
          ),
        "+",
        make_binary_operator(
          make_binary_operator(
            make_literal_access_expr("1.e0", BuiltinType.Float),
            "-",
            make_field_access_expr("zalpha")
            ),
          "*",
          make_field_access_expr("zzwy")
          )

        )

      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 1, -1), JRange=make_interval(Interval.Start, Interval.End, 1, -1)))

k_interval = make_interval(Interval.Start, Interval.End, 0, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zbtr"),
    make_literal_access_expr("1.", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("ztra"),
    make_binary_operator(
      make_literal_access_expr("-1.0", BuiltinType.Float),
      "*",
      make_binary_operator(
        make_field_access_expr("zbtr"),
        "*",
        make_binary_operator(
          make_binary_operator(
            make_binary_operator(
              make_field_access_expr("zwx", [0, 0, 0]),
              "-",
              make_field_access_expr("zwx", [-1, 0, 0])
              ),
            "+",
            make_field_access_expr("zwy", [0, 0, 0])
            ),
          "-",
          make_field_access_expr("zwy", [0, -1, 0])
          )

        )
),
    "="),
  make_assignment_stmt(
    make_field_access_expr("mydomain", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("mydomain", [0, 0, 0]),
      "+",
      make_field_access_expr("ztra")
      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 1, -1), JRange=make_interval(Interval.Start, Interval.End, 1, -1)))

k_interval = make_interval(Interval.Start, 1, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.End, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 1, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("tmask", [0, 0, 0]),
      "*",
      make_binary_operator(
        make_field_access_expr("mydomain", [0, 0, -1]),
        "-",
        make_field_access_expr("mydomain", [0, 0, 0])
        )

      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, 1, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zslpx", [0, 0, 0]),
    make_literal_access_expr("0.e0", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 1, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("tmp_abs"),
    make_literal_access_expr("0.25e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_field_access_expr("tmp_abs"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_binary_operator(
      make_field_access_expr("tmp_abs"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_field_access_expr("res_abs"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign"),
    make_binary_operator(
      make_field_access_expr("zwx", [0, 0, 0]),
      "*",
      make_field_access_expr("zwx", [0, 0, 1])
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zslpx", [0, 0, 0]),
    make_binary_operator(
      make_binary_operator(
        make_field_access_expr("zwx", [0, 0, 0]),
        "+",
        make_field_access_expr("zwx", [0, 0, 1])
        ),
      "*",
      make_binary_operator(
        make_literal_access_expr("0.25e0", BuiltinType.Float),
        "+",
        make_field_access_expr("res_sign")
        )

      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 1, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("tmp_abs"),
    make_literal_access_expr("1.e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_field_access_expr("tmp_abs"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_binary_operator(
      make_field_access_expr("tmp_abs"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_field_access_expr("res_abs"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign"),
    make_field_access_expr("zslpx", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_1"),
    make_field_access_expr("zslpx", [0, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_1"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_field_access_expr("tmp_abs_1"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_1"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_1"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_min"),
    make_field_access_expr("res_abs_1"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_2"),
    make_field_access_expr("zwx", [0, 0, 1]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_2"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_2"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_2"),
    make_field_access_expr("tmp_abs_2"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_2"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_2"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("tmp_min"),
    make_binary_operator(
      make_literal_access_expr("2.e0", BuiltinType.Float),
      "*",
      make_field_access_expr("res_abs_2")
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_min"),
    "<",
    make_field_access_expr("res_min")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_min"),
    make_field_access_expr("tmp_min"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("tmp_abs_3"),
    make_field_access_expr("zwx", [0, 0, 0]),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs_3"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs_3"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_3"),
    make_field_access_expr("tmp_abs_3"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs_3"),
    make_binary_operator(
      make_field_access_expr("tmp_abs_3"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("tmp_min"),
    make_binary_operator(
      make_literal_access_expr("2.e0", BuiltinType.Float),
      "*",
      make_field_access_expr("res_abs_3")
      ),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_min"),
    "<",
    make_field_access_expr("res_min")
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_min"),
    make_field_access_expr("tmp_min"),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("zslpx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_field_access_expr("res_min")
      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, 1, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("pwn", [0, 0, 0]),
      "*",
      make_field_access_expr("mydomain", [0, 0, 0])
      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 0, 0), JRange=make_interval(Interval.Start, Interval.End, 0, 0)))

k_interval = make_interval(Interval.Start, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zdt"),
    make_literal_access_expr("1", BuiltinType.Integer),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zbtr"),
    make_literal_access_expr("1.", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward))

k_interval = make_interval(Interval.Start, Interval.End, 1, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("tmp_abs"),
    make_literal_access_expr("0.5e0", BuiltinType.Float),
    "="),
  make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_literal_access_expr("0.0", BuiltinType.Float),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_abs"),
    ">",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_field_access_expr("tmp_abs"),
    "=")]), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_abs"),
    make_binary_operator(
      make_field_access_expr("tmp_abs"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")])),
  make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_field_access_expr("res_abs"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("tmp_sign"),
    make_field_access_expr("pwn", [0, 0, 0]),
    "="),
  make_if_stmt(make_expr_stmt(make_binary_operator(
    make_field_access_expr("tmp_sign"),
    "<",
    make_literal_access_expr("0.0", BuiltinType.Float)
    )), make_block_stmt([make_assignment_stmt(
    make_field_access_expr("res_sign"),
    make_binary_operator(
      make_field_access_expr("res_sign"),
      "*",
      make_literal_access_expr("-1.0", BuiltinType.Float)
      ),
    "=")]), None),
  make_assignment_stmt(
    make_field_access_expr("z0w"),
    make_field_access_expr("res_sign"),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zalpha"),
    make_binary_operator(
      make_literal_access_expr("0.5e0", BuiltinType.Float),
      "+",
      make_field_access_expr("z0w")
      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zw"),
    make_binary_operator(
      make_field_access_expr("z0w"),
      "-",
      make_binary_operator(
        make_binary_operator(
          make_binary_operator(
            make_literal_access_expr("0.5e0", BuiltinType.Float),
            "*",
            make_field_access_expr("pwn", [0, 0, 0])
            ),
          "*",
          make_field_access_expr("zdt")
          ),
        "*",
        make_field_access_expr("zbtr")
        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zzwx"),
    make_binary_operator(
      make_field_access_expr("mydomain", [0, 0, 0]),
      "+",
      make_binary_operator(
        make_field_access_expr("zind", [0, 0, -1]),
        "*",
        make_binary_operator(
          make_field_access_expr("zw"),
          "*",
          make_field_access_expr("zslpx", [0, 0, 0])
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zzwy"),
    make_binary_operator(
      make_field_access_expr("mydomain", [0, 0, -1]),
      "+",
      make_binary_operator(
        make_field_access_expr("zind", [0, 0, -1]),
        "*",
        make_binary_operator(
          make_field_access_expr("zw"),
          "*",
          make_field_access_expr("zslpx", [0, 0, -1])
          )

        )

      ),
    "="),
  make_assignment_stmt(
    make_field_access_expr("zwx", [0, 0, 0]),
    make_binary_operator(
      make_field_access_expr("pwn", [0, 0, 0]),
      "*",
      make_binary_operator(
        make_binary_operator(
          make_field_access_expr("zalpha"),
          "*",
          make_field_access_expr("zzwx")
          ),
        "+",
        make_binary_operator(
          make_binary_operator(
            make_literal_access_expr("1.", BuiltinType.Float),
            "-",
            make_field_access_expr("zalpha")
            ),
          "*",
          make_field_access_expr("zzwy")
          )

        )

      ),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 1, -1), JRange=make_interval(Interval.Start, Interval.End, 1, -1)))

k_interval = make_interval(Interval.Start, Interval.End, 0, 0)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("zbtr"),
    make_literal_access_expr("1.", BuiltinType.Float),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward))

k_interval = make_interval(Interval.Start, Interval.End, 0, -1)
body_ast = make_ast([
  make_assignment_stmt(
    make_field_access_expr("ztra"),
    make_binary_operator(
      make_literal_access_expr("-1.0", BuiltinType.Float),
      "*",
      make_binary_operator(
        make_field_access_expr("zbtr"),
        "*",
        make_binary_operator(
          make_field_access_expr("zwx", [0, 0, 0]),
          "-",
          make_field_access_expr("zwx", [0, 0, 1])
          )

        )
),
    "="),
  make_assignment_stmt(
    make_field_access_expr("mydomain", [0, 0, 0]),
    make_field_access_expr("ztra"),
    "=")
])
vertical_region_fns.append(make_vertical_region_decl_stmt(body_ast, k_interval, VerticalRegion.Forward, IRange=make_interval(Interval.Start, Interval.End, 1, -1), JRange=make_interval(Interval.Start, Interval.End, 1, -1)))


sir = make_sir(stencil_name+".cpp", AST.GridType.Value("Cartesian"), [
  make_stencil(
    stencil_name,
    make_ast(vertical_region_fns),
    [make_field("tmask", make_field_dimensions_cartesian([1, 1, 1])), make_field("tsn", make_field_dimensions_cartesian([1, 1, 1])), make_field("vmask", make_field_dimensions_cartesian([1, 1, 1])), make_field("upsmsk", make_field_dimensions_cartesian([1, 1, 0])), make_field("zwy", make_field_dimensions_cartesian([1, 1, 1]), is_temporary=True), make_field("pwn", make_field_dimensions_cartesian([1, 1, 1])), make_field("pvn", make_field_dimensions_cartesian([1, 1, 1])), make_field("zwx", make_field_dimensions_cartesian([1, 1, 1]), is_temporary=True), make_field("rnfmsk_z", make_field_dimensions_cartesian([0, 0, 1])), make_field("pun", make_field_dimensions_cartesian([1, 1, 1])), make_field("ztfreez", make_field_dimensions_cartesian([1, 1, 0])), make_field("zslpx", make_field_dimensions_cartesian([1, 1, 1])), make_field("rnfmsk", make_field_dimensions_cartesian([1, 1, 0])), make_field("zind", make_field_dimensions_cartesian([1, 1, 1]), is_temporary=True), make_field("mydomain", make_field_dimensions_cartesian([1, 1, 1])), make_field("umask", make_field_dimensions_cartesian([1, 1, 1])), make_field("zslpy", make_field_dimensions_cartesian([1, 1, 1]), is_temporary=True), make_field("zu", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_4", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_min_1", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_6", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_sign", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_min", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zw", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_1", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_6", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("z0w", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_7", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_1", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zbtr", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zalpha", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zzwx", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_3", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_min_1", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_sign_1", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_2", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_5", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_min", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_3", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zdt", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zzwy", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_5", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_max", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_sign_1", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_max", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zice", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("ztra", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_abs_2", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_7", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("res_sign", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs_4", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("zv", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("tmp_abs", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("z0v", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True), make_field("z0u", make_field_dimensions_cartesian([1, 0, 0]), is_temporary=True)]
  )
])
# code = dawn4py.compile(sir, backend=dawn4py.CodeGenBackend.CXXNaive)
code = dawn4py.compile(sir, backend=dawn4py.CodeGenBackend.CUDA)
# code = dawn4py.compile(sir, backend=dawn4py.CodeGenBackend.GridTools)
print(code)
